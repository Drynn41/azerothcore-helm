apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Chart.Name }}-job"
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: git-cloner
          image: alpine  # Utilise l'image officielle Git
          command: ["/bin/sh", "-c"]
          args:
            - apk add --no-cache git && find /{{ .Values.cms.pvc.pvc_name }}/ -delete && pwd
              && git clone --branch $GIT_BRANCH --single-branch $GIT_REPO {{ .Values.cms.pvc.pvc_name }}
              && find /{{ .Values.cms.pvc.pvc_name }}/ -type f -exec chmod 644 {} \;
              && find /{{ .Values.cms.pvc.pvc_name }}/ -exec chown -R 1000:1000 {} \;
              && ls -alh /{{ .Values.cms.pvc.pvc_name }}
              && find /{{ .Values.cms.pvc.pvc_name }}/ -type d -exec chmod 755 {} \;

          volumeMounts:
            - mountPath: {{ .Values.cms.pvc.pvc_name }}
              name: {{ .Values.cms.pvc.pvc_name }}
          envFrom:
            - configMapRef:
                name: "{{ .Chart.Name }}-config"
          resources:
            requests:
              memory: {{ .Values.cms.resources.requests.memory }}       # Le conteneur demande au moins 1 Go de RAM
              cpu: {{ .Values.cms.resources.requests.cpu }}         # Le conteneur demande 0.5 vCPU (un demi processeur)
            limits:
              memory: {{ .Values.cms.resources.limits.memory }}        # Le conteneur ne pourra pas utiliser plus de 2 Go de RAM
              cpu: {{ .Values.cms.resources.limits.cpu }}
      volumes:  # ❗️ La section volumes doit être DANS spec.template.spec
        - name: {{ .Values.cms.pvc.pvc_name }}
          persistentVolumeClaim:
            claimName: {{ .Values.cms.pvc.pvc_name }}  # PVC du client, à adapter si nécessaire
